stages:
  - lint
  - build
  - deploy

phpcs:
  stage: lint
  image: alpine:edge
  variables:
    COMPOSER_HOME: .composer
  before_script:
    - apk add composer php7-tokenizer php7-xmlwriter php7-simplexml
    - composer --no-interaction --no-ansi global require squizlabs/php_codesniffer
  script:
    - .composer/vendor/bin/phpcs --standard=PSR2 app routes config tests
  cache:
    paths:
      - .composer

build:
  stage: build
  image: alpine:edge
  before_script:
    - >
        apk add composer npm php7-dom php7-fileinfo php7-json php7-xml
        php7-mbstring php7-openssl php7-tokenizer tar
    - composer --no-interaction --no-ansi --no-dev install
    - npm install
  script:
    - npm run prod
    - echo "$CI_COMMIT_SHA" > version
      # excluding vcs and node_modules, as they are not required for running
      # and are potentially fat
    - tar -cf app.tar --exclude-vcs --exclude=node_modules --exclude=app.tar .
  cache:
    paths:
      - vendor
      - node_modules
  artifacts:
    paths:
      - app.tar
