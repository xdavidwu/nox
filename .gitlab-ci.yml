stages:
  - lint
  - build
  - package
  - deploy

phpcs:
  stage: lint
  image: alpine:3.15
  variables:
    COMPOSER_HOME: .composer
  before_script:
    - apk add composer php8-tokenizer php8-xmlwriter php8-simplexml
    - composer --no-interaction --no-ansi global require squizlabs/php_codesniffer
  script:
    - php8 .composer/vendor/bin/phpcs --standard=PSR2 app routes config tests
  cache:
    key: $CI_JOB_NAME
    paths:
      - .composer

build:
  stage: build
  image: alpine:3.15
  before_script:
    - >
        apk add composer php8 php8-phar php8-curl php8-iconv php8-json php8-mbstring php8-openssl php8-zip
        npm php8-dom php8-fileinfo php8-xml php8-tokenizer tar
    - composer --no-interaction --no-ansi --optimize-autoloader --no-dev install
    - npm ci
  script:
    - npm run prod
    - echo "$CI_COMMIT_SHA" > version
    - chmod -R g=r,o=r . && find . -type d -exec chmod g=rx,o=rx {} \;
      # excluding vcs and node_modules, as they are not required for running
      # and are potentially fat
    - tar -cf app.tar --exclude-vcs --exclude=node_modules --exclude=app.tar .
  cache:
    key: $CI_JOB_NAME
    paths:
      - node_modules
  artifacts:
    paths:
      - app.tar

package-nginx:
  stage: package
  only:
    refs:
      - master
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/containers/Dockerfile-nginx --destination $CI_REGISTRY_IMAGE/nginx:$CI_PIPELINE_ID

package-fpm:
  stage: package
  only:
    refs:
      - master
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/containers/Dockerfile-fpm --destination $CI_REGISTRY_IMAGE/fpm:$CI_PIPELINE_ID

package-mariadb:
  stage: package
  only:
    refs:
      - master
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/containers/Dockerfile-mariadb --destination $CI_REGISTRY_IMAGE/mariadb:$CI_PIPELINE_ID

deploy:
  stage: deploy
  image:
    name: alpine:edge
  environment:
    name: production
  only:
    - master
  before_script:
    - echo https://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
    - apk add gettext kubectl
    - cd containers
  script:
    - mv kustomization.yml .orig.yml
    - envsubst <.orig.yml >kustomization.yml
    - kubectl kustomize . --load-restrictor LoadRestrictionsNone | ./kubectl apply -f -

